apiVersion: v1
data:
  prometheus.yml: |+
    # A scrape configuration for running Prometheus on a Kubernetes cluster.
    # This uses separate scrape configs for cluster components (i.e. API server, node)
    # and services to allow each to use different authentication configs.
    #
    # Kubernetes labels will be added as Prometheus labels on metrics via the
    # `labelmap` relabeling action.
    #

    global:
      scrape_interval: 30s
      scrape_timeout: 30
    alerting:
      alertmanagers:
        - static_configs:
            targets: ['alertmanager:9093']
    rule_files:
      - /etc/prometheus/alertmanager.rules
    scrape_configs:
    - job_name: 'kubernetes-apiservers'



      kubernetes_sd_configs:

      - role: endpoints



      # Default to scraping over https. If required, just disable this or change to

      # `http`.

      scheme: https



      # This TLS & bearer token file config is used to connect to the actual scrape

      # endpoints for cluster components. This is separate to discovery auth

      # configuration because discovery & scraping are two separate concerns in

      # Prometheus. The discovery auth config is automatic if Prometheus runs inside

      # the cluster. Otherwise, more config options have to be provided within the

      # <kubernetes_sd_config>.

      tls_config:

        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

        # If your node certificates are self-signed or use a different CA to the

        # master CA, then disable certificate verification below. Note that

        # certificate verification is an integral part of a secure infrastructure

        # so this should only be disabled in a controlled environment. You can

        # disable certificate verification by uncommenting the line below.

        #

        # insecure_skip_verify: true

      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token



      # Keep only the default/kubernetes service endpoints for the https port. This

      # will add targets for each API server which Kubernetes adds an endpoint to

      # the default/kubernetes service.

      relabel_configs:

      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]

        action: keep

        regex: default;kubernetes;https



    - job_name: 'kubernetes-nodes'



      # Default to scraping over https. If required, just disable this or change to

      # `http`.

      scheme: https



      # This TLS & bearer token file config is used to connect to the actual scrape

      # endpoints for cluster components. This is separate to discovery auth

      # configuration because discovery & scraping are two separate concerns in

      # Prometheus. The discovery auth config is automatic if Prometheus runs inside

      # the cluster. Otherwise, more config options have to be provided within the

      # <kubernetes_sd_config>.

      tls_config:

        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

        # If your node certificates are self-signed or use a different CA to the

        # master CA, then disable certificate verification below. Note that

        # certificate verification is an integral part of a secure infrastructure

        # so this should only be disabled in a controlled environment. You can

        # disable certificate verification by uncommenting the line below.

        #

        # insecure_skip_verify: true

      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token



      kubernetes_sd_configs:

      - role: node



      relabel_configs:

      - action: labelmap

        regex: __meta_kubernetes_node_label_(.+)



    # Scrape config for service endpoints.
    #
    # The relabeling allows the actual service scrape endpoint to be configured
    # via the following annotations:
    #
    # * `prometheus.io/scrape`: Only scrape services that have a value of `true`
    # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
    # to set this to `https` & most likely set the `tls_config` of the scrape config.
    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
    # * `prometheus.io/port`: If the metrics are exposed on a different port to the
    # service then set this appropriately.
    - job_name: 'kubernetes-service-endpoints'



      tls_config:

        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

        # TODO: this should be per target

        insecure_skip_verify: true



      kubernetes_sd_configs:

      - role: endpoints



      relabel_configs:

      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]

        action: keep

        regex: true

      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]

        action: replace

        target_label: __scheme__

        regex: (https?)

      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]

        action: replace

        target_label: __metrics_path__

        regex: (.+)

      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]

        action: replace

        target_label: __address__

        regex: (.+)(?::\d+);(\d+)

        replacement: $1:$2

      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_username]

        action: replace

        target_label: __basic_auth_username__

        regex: (.+)

      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_password]

        action: replace

        target_label: __basic_auth_password__

        regex: (.+)

      - action: labelmap

        regex: __meta_kubernetes_service_label_(.+)

      - source_labels: [__meta_kubernetes_namespace]

        action: replace

        target_label: kubernetes_namespace

      - source_labels: [__meta_kubernetes_service_name]

        action: replace

        target_label: kubernetes_name


kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"prometheus.yml":"# A scrape configuration for running Prometheus on a Kubernetes cluster.\n# This uses separate scrape configs for cluster components (i.e. API server, node)\n# and services to allow each to use different authentication configs.\n#\n# Kubernetes labels will be added as Prometheus labels on metrics via the\n# `labelmap` relabeling action.\n#\n\nglobal:\n  scrape_interval: 30s\n  scrape_timeout: 30s\n\nscrape_configs:\n- job_name: 'kubernetes-apiservers'\n\n\n\n  kubernetes_sd_configs:\n\n  - role: endpoints\n\n\n\n  # Default to scraping over https. If required, just disable this or change to\n\n  # `http`.\n\n  scheme: https\n\n\n\n  # This TLS \u0026 bearer token file config is used to connect to the actual scrape\n\n  # endpoints for cluster components. This is separate to discovery auth\n\n  # configuration because discovery \u0026 scraping are two separate concerns in\n\n  # Prometheus. The discovery auth config is automatic if Prometheus runs inside\n\n  # the cluster. Otherwise, more config options have to be provided within the\n\n  # \u003ckubernetes_sd_config\u003e.\n\n  tls_config:\n\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\n    # If your node certificates are self-signed or use a different CA to the\n\n    # master CA, then disable certificate verification below. Note that\n\n    # certificate verification is an integral part of a secure infrastructure\n\n    # so this should only be disabled in a controlled environment. You can\n\n    # disable certificate verification by uncommenting the line below.\n\n    #\n\n    # insecure_skip_verify: true\n\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\n\n  # Keep only the default/kubernetes service endpoints for the https port. This\n\n  # will add targets for each API server which Kubernetes adds an endpoint to\n\n  # the default/kubernetes service.\n\n  relabel_configs:\n\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\n    action: keep\n\n    regex: default;kubernetes;https\n\n\n\n- job_name: 'kubernetes-nodes'\n\n\n\n  # Default to scraping over https. If required, just disable this or change to\n\n  # `http`.\n\n  scheme: https\n\n\n\n  # This TLS \u0026 bearer token file config is used to connect to the actual scrape\n\n  # endpoints for cluster components. This is separate to discovery auth\n\n  # configuration because discovery \u0026 scraping are two separate concerns in\n\n  # Prometheus. The discovery auth config is automatic if Prometheus runs inside\n\n  # the cluster. Otherwise, more config options have to be provided within the\n\n  # \u003ckubernetes_sd_config\u003e.\n\n  tls_config:\n\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\n    # If your node certificates are self-signed or use a different CA to the\n\n    # master CA, then disable certificate verification below. Note that\n\n    # certificate verification is an integral part of a secure infrastructure\n\n    # so this should only be disabled in a controlled environment. You can\n\n    # disable certificate verification by uncommenting the line below.\n\n    #\n\n    # insecure_skip_verify: true\n\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\n\n  kubernetes_sd_configs:\n\n  - role: node\n\n\n\n  relabel_configs:\n\n  - action: labelmap\n\n    regex: __meta_kubernetes_node_label_(.+)\n\n\n\n# Scrape config for service endpoints.\n#\n# The relabeling allows the actual service scrape endpoint to be configured\n# via the following annotations:\n#\n# * `prometheus.io/scrape`: Only scrape services that have a value of `true`\n# * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need\n# to set this to `https` \u0026 most likely set the `tls_config` of the scrape config.\n# * `prometheus.io/path`: If the metrics path is not `/metrics` override this.\n# * `prometheus.io/port`: If the metrics are exposed on a different port to the\n# service then set this appropriately.\n- job_name: 'kubernetes-service-endpoints'\n\n\n\n  tls_config:\n\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\n    # TODO: this should be per target\n\n    insecure_skip_verify: true\n\n\n\n  kubernetes_sd_configs:\n\n  - role: endpoints\n\n\n\n  relabel_configs:\n\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n\n    action: keep\n\n    regex: true\n\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n\n    action: replace\n\n    target_label: __scheme__\n\n    regex: (https?)\n\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n\n    action: replace\n\n    target_label: __metrics_path__\n\n    regex: (.+)\n\n  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n\n    action: replace\n\n    target_label: __address__\n\n    regex: (.+)(?::\\d+);(\\d+)\n\n    replacement: $1:$2\n\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_username]\n\n    action: replace\n\n    target_label: __basic_auth_username__\n\n    regex: (.+)\n\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_password]\n\n    action: replace\n\n    target_label: __basic_auth_password__\n\n    regex: (.+)\n\n  - action: labelmap\n\n    regex: __meta_kubernetes_service_label_(.+)\n\n  - source_labels: [__meta_kubernetes_namespace]\n\n    action: replace\n\n    target_label: kubernetes_namespace\n\n  - source_labels: [__meta_kubernetes_service_name]\n\n    action: replace\n\n    target_label: kubernetes_name\n\n\n"},"kind":"ConfigMap","metadata":{"annotations":{},"creationTimestamp":"2018-09-13T04:44:56Z","name":"prometheus-config","namespace":"monitor","resourceVersion":"24501829","selfLink":"/api/v1/namespaces/monitor/configmaps/prometheus-config","uid":"c32602d7-b70f-11e8-adf6-fa163e91658c"}}
  creationTimestamp: 2018-11-30T07:32:21Z
  name: prometheus-config
  namespace: monitor
  resourceVersion: "29838311"
  selfLink: /api/v1/namespaces/monitor/configmaps/prometheus-config
  uid: 1297a853-f472-11e8-a62a-fa163e91658c
